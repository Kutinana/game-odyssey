<!doctype html>
<html lang="{{ site.lang or 'zh-CN' }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{% if cn_title or en_title %}{% if site.lang and (site.lang == 'en' or site.lang == 'en-US' or site.lang == 'en-GB') %}{{ en_title or en['site.title'] }}{% else %}{{ cn_title or cn['site.title'] }}{% endif %}{% else %}{% if title %}{{ title }}{% else %}{% if site.lang and (site.lang == 'en' or site.lang == 'en-US' or site.lang == 'en-GB') %}{{ en['site.title'] }}{% else %}{{ cn['site.title'] }}{% endif %}{% endif %}{% endif %}</title>
    {% if cn_title or en_title %}
    <meta data-locale-title="cn" content="{{ cn_title }}">
    <meta data-locale-title="en" content="{{ en_title }}">
    {% endif %}
    <script>
      // Apply saved theme early to avoid FOUC
      (function() {
        try {
          var saved = localStorage.getItem('theme');
          var systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          var isDark = saved ? saved === 'dark' : systemDark;
          var root = document.documentElement;
          if (isDark) root.classList.add('dark'); else root.classList.remove('dark');
        } catch (e) {}
      })();
      // Apply persisted fonts-loaded flag early to avoid re-swap
      (function(){
        try {
          var has = localStorage.getItem('fonts-loaded') === '1';
          var check = function(q){ try { return document.fonts && document.fonts.check(q); } catch(e){ return false; } };
          if (has && (check('400 1em "LXGWBright"') || check('1em LXGWBright'))) {
            document.documentElement.classList.add('fonts-loaded');
          }
        } catch (e) {}
      })();
    </script>
    <link rel="stylesheet" href="{{ '/assets/styles.css' | url }}">
    <link rel="preload" href="{{ '/assets/fonts/LXGWBright-Light.woff2' | url }}" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="{{ '/assets/fonts/LXGWBright-LightItalic.woff2' | url }}" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="{{ '/assets/fonts/LXGWBright-Regular.woff2' | url }}" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="{{ '/assets/fonts/LXGWBright-Italic.woff2' | url }}" as="font" type="font/woff2" crossorigin>
    <script>
      // Persist fonts-loaded after first success in this or any tab
      (function(){
        if (!('fonts' in document)) return;
        try {
          var promises = [
            document.fonts.load('400 1em "LXGWBright"'),
            document.fonts.load('700 1em "LXGWBright"'),
            document.fonts.load('italic 400 1em "LXGWBright"'),
            document.fonts.load('italic 700 1em "LXGWBright"')
          ];
          Promise.all(promises).then(function(){
            document.documentElement.classList.add('fonts-loaded');
            try { localStorage.setItem('fonts-loaded','1'); } catch(e) {}
          });
        } catch (e) {}
      })();
    </script>
  </head>
  <body class="bg-neutral-50 text-neutral-900 dark:bg-neutral-950 dark:text-neutral-100 selection:bg-indigo-500/30">
    <header class="fixed top-0 inset-x-0 z-50">
      <nav class="max-w-6xl mx-auto mt-2 px-4 py-2 rounded-xl border border-black/5 dark:border-white/10 bg-white/40 dark:bg-neutral-900/30 backdrop-blur-2xl">
          <div class="flex items-center justify-between">
            <a href="{{ '/' | url }}" class="text-sm font-semibold tracking-wide text-neutral-900 dark:text-neutral-100" data-i18n="site.title">
              {{ cn['site.title'] }}
            </a>
            <div id="navTabs" data-active="{{ activeNav }}" class="hidden md:flex relative items-center gap-3 text-sm">
              <span id="navIndicator" class="nav-indicator absolute rounded-lg opacity-0"></span>
              <a href="{{ '/' | url }}" data-tab="home" data-nav class="px-3 py-1 rounded-lg transition-colors {% if activeNav == 'home' %}text-neutral-900 dark:text-white{% else %}text-neutral-600 dark:text-neutral-300 hover:text-neutral-900 dark:hover:text-white{% endif %}" data-i18n="nav.home">Home</a>
              <a href="{{ '/projects/' | url }}" data-tab="projects" data-nav class="px-3 py-1 rounded-lg transition-colors {% if activeNav == 'projects' %}text-neutral-900 dark:text-white{% else %}text-neutral-600 dark:text-neutral-300 hover:text-neutral-900 dark:hover:text-white{% endif %}" data-i18n="nav.projects">Projects</a>
              <a href="{{ '/about/' | url }}" data-tab="about" data-nav class="px-3 py-1 rounded-lg transition-colors {% if activeNav == 'about' %}text-neutral-900 dark:text-white{% else %}text-neutral-600 dark:text-neutral-300 hover:text-neutral-900 dark:hover:text-white{% endif %}" data-i18n="nav.about">About</a>
            </div>
            <div class="flex items-center gap-2">
              <button id="themeToggle" aria-label="Toggle theme" class="inline-flex items-center justify-center w-9 h-9 rounded-lg border border-black/5 dark:border-white/10 bg-white/40 hover:bg-white/60 dark:bg-neutral-800/30 dark:hover:bg-neutral-700/40 text-neutral-900 dark:text-neutral-100 transition-colors">
                <svg id="iconMoon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/></svg>
                <svg id="iconSun" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden" fill="currentColor" viewBox="0 0 20 20"><path d="M10 15a5 5 0 100-10 5 5 0 000 10zm0 5a1 1 0 011-1h0a1 1 0 110 2h0a1 1 0 01-1-1zm0-20a1 1 0 011 1h0a1 1 0 11-2 0h0a1 1 0 011-1zm10 10a1 1 0 01-1 1h0a1 1 0 110-2h0a1 1 0 011 1zM1 10a1 1 0 011-1h0a1 1 0 110 2h0A1 1 0 011 10zm15.657-6.657a1 1 0 010 1.414h0a1 1 0 11-1.414-1.414h0a1 1 0 011.414 0zM4.757 15.243a1 1 0 010 1.414h0a1 1 0 11-1.414-1.414h0a1 1 0 011.414 0zM15.657 15.243a1 1 0 011.414 0h0a1 1 0 11-1.414 1.414h0a1 1 0 010-1.414zM4.757 4.757A1 1 0 003.343 3.343h0A1 1 0 114.757 4.757z"/></svg>
              </button>
              <button id="langToggle" class="text-sm px-3 py-2 rounded-lg border border-black/5 dark:border-white/10 bg-white/40 hover:bg-white/60 dark:bg-neutral-800/30 dark:hover:bg-neutral-700/40 text-neutral-900 dark:text-neutral-100 transition-colors">EN</button>
            </div>
          </div>
      </nav>
    </header>

    <div id="swup" class="swup-fade opacity-0">
      <main class="{% if page.url != '/' %}max-w-6xl mx-auto p-4 pt-24{% endif %}">
        {{ content | safe }}
      </main>
    </div>

    <script>
      (function() {
        // Register service worker for font caching
        try {
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('{{ '/sw.js' | url }}');
          }
        } catch (e) {}
        var root = document.documentElement;
        var btn = document.getElementById('themeToggle');
        var iconMoon = document.getElementById('iconMoon');
        var iconSun = document.getElementById('iconSun');
        function setIcon(dark) {
          if (!iconMoon || !iconSun) return;
          if (dark) { iconMoon.classList.add('hidden'); iconSun.classList.remove('hidden'); }
          else { iconSun.classList.add('hidden'); iconMoon.classList.remove('hidden'); }
        }
        // Do not bind here to avoid double handlers; handled in bindUi()

        // Minimal i18n for nav and CTA
        var dict = { cn: {{ cn | json | safe }}, en: {{ en | json | safe }} };
        var rootLocale = (localStorage.getItem('locale') || 'cn');
        if (rootLocale === 'zh') rootLocale = 'cn';
        var langToggle = document.getElementById('langToggle');
        function applyLocale(locale) {
          // Backward compatibility: map 'zh' -> 'cn'
          if (locale === 'zh') locale = 'cn';
          var data = (dict && dict[locale]) || (dict && dict.cn) || {};
          // Optional per-page localized title from meta tags (set server-side)
          document.querySelectorAll('[data-i18n]').forEach(function(el) {
            var key = el.getAttribute('data-i18n');
            if (data[key]) el.textContent = data[key];
          });
          root.setAttribute('lang', locale === 'en' ? 'en' : 'zh-CN');
          // Toggle any localized elements (titles, team, markdown, etc.)
          try {
            document.querySelectorAll('[data-locale]')
              .forEach(function(el){ el.style.display = (el.getAttribute('data-locale') === locale ? '' : 'none'); });
            // Update <title> if per-page localized title is provided
            try {
              var metaCn = document.querySelector('meta[data-locale-title="cn"]');
              var metaEn = document.querySelector('meta[data-locale-title="en"]');
              var t = (locale === 'en' ? (metaEn && metaEn.getAttribute('content')) : (metaCn && metaCn.getAttribute('content')));
              if (t && typeof t === 'string' && t.trim().length > 0) { document.title = t; }
            } catch (e) {}
            // Reposition nav indicator after labels change width
            var nav = document.getElementById('navTabs');
            var indicator = document.getElementById('navIndicator');
            if (nav && indicator) {
              var activeKey = nav.getAttribute('data-active');
              var target = nav.querySelector('a[data-tab="' + activeKey + '"]');
              if (target) {
                var r = target.getBoundingClientRect();
                var nr = nav.getBoundingClientRect();
                indicator.style.left = (r.left - nr.left - 4) + 'px';
                indicator.style.width = (r.width + 8) + 'px';
                indicator.style.top = (r.top - nr.top - 2) + 'px';
                indicator.style.opacity = '1';
              }
            }
          } catch (e) {}
        }
        function bindUi() {
          // Re-select elements after page replacement
          btn = document.getElementById('themeToggle');
          iconMoon = document.getElementById('iconMoon');
          iconSun = document.getElementById('iconSun');
          langToggle = document.getElementById('langToggle');
          // Nav indicator follow
          try {
            var nav = document.getElementById('navTabs');
            var indicator = document.getElementById('navIndicator');
            if (nav && indicator) {
              var tabs = Array.prototype.slice.call(nav.querySelectorAll('a[data-tab]'));
              function positionTo(el) {
                var r = el.getBoundingClientRect();
                var nr = nav.getBoundingClientRect();
                indicator.style.left = (r.left - nr.left - 4) + 'px';
                indicator.style.width = (r.width + 8) + 'px';
                indicator.style.top = (r.top - nr.top - 2) + 'px';
                indicator.style.opacity = '1';
              }
              var activeKey = nav.getAttribute('data-active');
              var activeEl = tabs.find(function(t){ return t.getAttribute('data-tab') === activeKey; }) || tabs[0];
              if (activeEl) positionTo(activeEl);
              tabs.forEach(function(t){
                t.addEventListener('mouseenter', function(){ positionTo(t); });
              });
              nav.addEventListener('mouseleave', function(){ if (activeEl) positionTo(activeEl); });
            }
          } catch (e) {}
          setIcon(root.classList.contains('dark'));
          if (btn) {
            btn.setAttribute('aria-pressed', String(root.classList.contains('dark')));
          }
          if (btn && !btn._bound) {
            btn.addEventListener('click', function() {
              var isDark = root.classList.toggle('dark');
              localStorage.setItem('theme', isDark ? 'dark' : 'light');
              setIcon(isDark);
              btn.setAttribute('aria-pressed', String(isDark));
            });
            btn._bound = true;
          }
          try {
            var savedLocale = localStorage.getItem('locale');
            if (!savedLocale) {
              var navLang = (navigator.languages && navigator.languages[0]) || navigator.language || '';
              navLang = String(navLang || '').toLowerCase();
              var sys = (navLang.indexOf('zh') === 0 || navLang.indexOf('cn') === 0) ? 'cn' : 'en';
              localStorage.setItem('locale', sys);
              savedLocale = sys;
            }
            if (savedLocale === 'zh') savedLocale = 'cn';
            if (langToggle) { langToggle.textContent = savedLocale === 'en' ? 'EN' : 'CN'; }
            applyLocale(savedLocale);
            if (langToggle && !langToggle._bound) {
              langToggle.addEventListener('click', function() {
                var current = localStorage.getItem('locale') || savedLocale || 'cn';
                if (current === 'zh') current = 'cn';
                var next = current === 'cn' ? 'en' : 'cn';
                localStorage.setItem('locale', next);
                applyLocale(next);
                langToggle.textContent = next === 'en' ? 'EN' : 'CN';
              });
              langToggle._bound = true;
            }
          } catch (e) {}
        }

        // Initial bind
        bindUi();

        // Custom page transition: fade out to white/black then navigate
        var navLinks = document.querySelectorAll('a[data-nav]');
        var NAV_FADE_MS = 100;
        navLinks.forEach(function(a) {
          if (a._boundNav) return;
          a.addEventListener('click', function(e) {
            var href = a.getAttribute('href');
            if (!href || href.startsWith('#') || e.metaKey || e.ctrlKey) return;
            e.preventDefault();
            var isDark = root.classList.contains('dark');
            root.classList.add(isDark ? 'dark-mask' : 'light-mask', 'is-animating');
            setTimeout(function() { window.location.href = href; }, NAV_FADE_MS);
          });
          a._boundNav = true;
        });

        // Smooth page transitions on load (content only); clear any mask
        window.addEventListener('load', function() {
          var container = document.getElementById('swup');
          if (container) container.classList.remove('opacity-0');
          root.classList.remove('light-mask','dark-mask','is-animating');
        });
      })();
    </script>
  </body>
</html>
