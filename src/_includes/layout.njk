<!doctype html>
<html lang="{{ site.lang or 'zh-CN' }}" class="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ title or site.title }}</title>
    <script>
      // Apply saved theme early to avoid FOUC
      (function() {
        try {
          var saved = localStorage.getItem('theme');
          var systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          var isDark = saved ? saved === 'dark' : systemDark;
          var root = document.documentElement;
          if (isDark) root.classList.add('dark'); else root.classList.remove('dark');
        } catch (e) {}
      })();
    </script>
    <link rel="stylesheet" href="{{ '/assets/styles.css' | url }}">
  </head>
  <body class="bg-neutral-950 text-neutral-100 selection:bg-indigo-500/30">
    <header class="fixed top-0 inset-x-0 z-50">
      <nav class="max-w-6xl mx-auto mt-2 px-4 py-2 rounded-xl border border-white/10 bg-neutral-900/40 backdrop-blur-xl">
        <div class="flex items-center justify-between">
          <a href="{{ '/' | url }}" class="text-sm font-semibold tracking-wide text-neutral-100">
            {{ site.title }}
          </a>
          <div class="hidden md:flex items-center gap-6 text-sm">
            <a href="{{ '/' | url }}" class="hover:text-white text-neutral-300" data-i18n="nav.home">Home</a>
            <a href="{{ '/projects/' | url }}" class="hover:text-white text-neutral-300" data-i18n="nav.projects">Projects</a>
            <a href="{{ '/about/' | url }}" class="hover:text-white text-neutral-300" data-i18n="nav.about">About</a>
          </div>
          <div class="flex items-center gap-2">
            <button id="themeToggle" aria-label="Toggle theme" class="inline-flex items-center justify-center w-9 h-9 rounded-lg border border-white/10 bg-neutral-800/40 hover:bg-neutral-700/40">
              <svg id="iconMoon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/></svg>
              <svg id="iconSun" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden" fill="currentColor" viewBox="0 0 20 20"><path d="M10 15a5 5 0 100-10 5 5 0 000 10zm0 5a1 1 0 011-1h0a1 1 0 110 2h0a1 1 0 01-1-1zm0-20a1 1 0 011 1h0a1 1 0 11-2 0h0a1 1 0 011-1zm10 10a1 1 0 01-1 1h0a1 1 0 110-2h0a1 1 0 011 1zM1 10a1 1 0 011-1h0a1 1 0 110 2h0A1 1 0 011 10zm15.657-6.657a1 1 0 010 1.414h0a1 1 0 11-1.414-1.414h0a1 1 0 011.414 0zM4.757 15.243a1 1 0 010 1.414h0a1 1 0 11-1.414-1.414h0a1 1 0 011.414 0zM15.657 15.243a1 1 0 011.414 0h0a1 1 0 11-1.414 1.414h0a1 1 0 010-1.414zM4.757 4.757A1 1 0 003.343 3.343h0A1 1 0 114.757 4.757z"/></svg>
            </button>
            <select id="langSelect" class="text-sm px-2 py-2 rounded-lg border border-white/10 bg-neutral-800/40 hover:bg-neutral-700/40">
              <option value="zh">ZH</option>
              <option value="en">EN</option>
            </select>
          </div>
        </div>
      </nav>
    </header>

    <main class="{% if page.url != '/' %}max-w-6xl mx-auto p-4 pt-24{% endif %}">
      {{ content | safe }}
    </main>

    <script>
      (function() {
        var root = document.documentElement;
        var btn = document.getElementById('themeToggle');
        var iconMoon = document.getElementById('iconMoon');
        var iconSun = document.getElementById('iconSun');
        function setIcon(dark) {
          if (!iconMoon || !iconSun) return;
          if (dark) { iconMoon.classList.add('hidden'); iconSun.classList.remove('hidden'); }
          else { iconSun.classList.add('hidden'); iconMoon.classList.remove('hidden'); }
        }
        try {
          setIcon(root.classList.contains('dark'));
          if (btn) {
            btn.addEventListener('click', function() {
              var isDark = root.classList.toggle('dark');
              localStorage.setItem('theme', isDark ? 'dark' : 'light');
              setIcon(isDark);
            });
          }
        } catch (e) {}

        // Minimal i18n for nav and CTA
        var dict = {
          zh: {
            'nav.home': '首页',
            'nav.projects': '项目',
            'nav.about': '关于',
            'hero.cta': 'View Projects'
          },
          en: {
            'nav.home': 'Home',
            'nav.projects': 'Projects',
            'nav.about': 'About',
            'hero.cta': 'View Projects'
          }
        };
        var langSelect = document.getElementById('langSelect');
        function applyLocale(locale) {
          var data = dict[locale] || dict.zh;
          document.querySelectorAll('[data-i18n]').forEach(function(el) {
            var key = el.getAttribute('data-i18n');
            if (data[key]) el.textContent = data[key];
          });
          root.setAttribute('lang', locale === 'en' ? 'en' : 'zh-CN');
        }
        try {
          var savedLocale = localStorage.getItem('locale') || 'zh';
          if (langSelect) { langSelect.value = savedLocale; }
          applyLocale(savedLocale);
          if (langSelect) {
            langSelect.addEventListener('change', function() {
              var value = langSelect.value;
              localStorage.setItem('locale', value);
              applyLocale(value);
            });
          }
        } catch (e) {}
      })();
    </script>
  </body>
</html>
